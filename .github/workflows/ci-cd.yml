name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ci-cd

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.DB_NAME }}
        ports:
          - 5432:5432
        volumes:
          - pgdata:/var/lib/postgresql/data
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies for backend
        run: |
          cd backend/dz_delivery
          pip install --no-cache-dir -r requirements.txt

      - name: Create .env for Django
        run: |
          echo "DB_NAME=${{ vars.DB_NAME }}" >> backend/dz_delivery/.env
          echo "DB_USER=${{ secrets.POSTGRES_USER }}" >> backend/dz_delivery/.env
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> backend/dz_delivery/.env
          echo "DB_HOST=${{ vars.DB_HOST }}" >> backend/dz_delivery/.env
          echo "DB_PORT=${{ vars.DB_PORT }}" >> backend/dz_delivery/.env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> backend/dz_delivery/.env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> backend/dz_delivery/.env
          echo "ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}" >> backend/dz_delivery/.env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> backend/dz_delivery/.env
      - name: Run Migrations
        run: |
          cd backend/dz_delivery
          python manage.py migrate

      - name: Build Backend Docker Image
        run: |
          docker build -t dz_backend ./backend/dz_delivery

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies for frontend
        run: |
          cd frontend/dz_delivery
          npm install

      - name: Build Frontend Docker Image
        run: |
          docker build -t dz_frontend ./frontend/dz_delivery

      - name: Install dependencies for mobile
        run: |
          cd mobile/dz_delivery
          npm install

      - name: Build Mobile Docker Image
        run: |
          docker build -t dz_mobile ./mobile/dz_delivery

      - name: Run Backend Tests
        run: |
          cd backend/dz_delivery
          python manage.py test

      - name: Run Frontend Tests
        run: |
          cd frontend/dz_delivery
          npm test

      - name: Run Mobile Tests
        run: |
          cd mobile/dz_delivery
          npm test
